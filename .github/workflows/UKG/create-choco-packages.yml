name: Create and upload chocolatey package to JFrog
run_name: ""
on:
  workflow_dispatch:
    inputs:
      BUILD_PATH_CONFIG:
        description: "Build path configuration"
        required: true
        default: ""
      BUILD_VERSION:
        description: "Build version"
        required: true
        default: "8.0.3"
jobs:
  ## permissions
  ## logging
  build:
    runs-on: [garm, dev, us-east4, vm, windows, medium]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Choco package
        run: | ## Check for specific version
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Write-Output "Chocolatey is not installed. Installing Chocolatey..."
            Set-ExecutionPolicy Bypass -Scope Process -Force; 
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; 
            iwr https://community.chocolatey.org/install.ps1 -UseBasicParsing | iex
          } else {
            Write-Output "Chocolatey is already installed."
          }

      - name: Setup JFrog Cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_PROJECT: ${{ vars.JFROG_PROJECT_KEY }}
          JF_URL: ${{ vars.JFROG_ARTIFACTORY_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}

      - name: Create and upload packages
        run: |
          ## To check the best way to pass the credentials
           $secureNetworkPassword = ConvertTo-SecureString "password" -AsPlainText -Force
           $networkCredential = New-Object System.Management.Automation.PSCredential ("username, $secureNetworkPassword)

           $configPath = "${{ github.event.inputs.BUILD_PATH_CONFIG }}"
           $configContent = Get-Content -Path $jsonFilePath -Raw | ConvertFrom-Json
           $selectedBuild = $configContent | Where-Object { $_.build_version -eq "${{ github.event.inputs.BUILD_VERSION }}" }

           if ($selectedBuild) {
               Write-Output "Found Build Version: $desiredBuildVersion"

               ## Loop for each msi. 
               foreach ($msi in $selectedBuild.msis) {
                   $msiName = $msi.name
                   $msiPath = $msi.path
                   Write-Output "Processing MSI: Name = $msiName, Path = $msiPath"

                   $scriptPath = "${{ github.workspace }}\scripts\create-package.ps1"
                   & $scriptPath -version "${{ github.event.inputs.BUILD_VERSION }}" -msiPath "$msiPath" -credential $networkCredential
                   
                   Write-Output "Chocolatey package is created for $msiName."

                   ## To Check if file already exists.
                   jf rt u ".\packs\${{ github.event.inputs.MSI_NAME }}.${{ github.event.inputs.VERSION }}.nupkg" ${{ vars.JFROG_PACKAGE_REPOSITORY }}

                   Write-Output "Package upload for $msiName."
               }
           }
